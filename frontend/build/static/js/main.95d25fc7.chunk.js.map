{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstant.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderConstants.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","components/Meta.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/OrderListScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","document","location","href","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","key","active","Meta","description","keywords","Helmet","content","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","errorProductReview","alert","ListGroup","varient","countInStock","disabled","length","review","ye","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","search","Number","split","console","log","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","border","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingDeliver","successDeliver","loadingPay","successPay","addPayPalScript","clientId","script","createElement","async","onload","body","appendChild","window","paypal","amount","onSuccess","paymentResult","payOrder","deliverOrder","OrderListScreen","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","App","path","component","exact","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.95d25fc7.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer,\n  productReviewCreateReducer,\n  productTopRatedReducer,\n} from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n} from \"./reducers/userReducers\";\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderDeliverReducer,\n  orderListMyReducer,\n  orderListReducer,\n} from \"./reducers/orderReducers\";\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n});\n\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  : [];\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\n  : {};\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_RESET,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_RESET,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_RESET,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from \"../constants/productConstants\";\n\n//the payload comes from what's in your actions\nexport const productListReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return { loading: true, products: [] };\n    case PRODUCT_LIST_SUCCESS:\n      return {\n        loading: false,\n        products: action.payload.products,\n        pages: action.payload.pages,\n        page: action.payload.page,\n      };\n    case PRODUCT_LIST_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const productDetailsReducer = (\n  state = { product: { reviews: [] } },\n  action\n) => {\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return { loading: true, products: [], ...state };\n    case PRODUCT_DETAILS_SUCCESS:\n      return { loading: false, product: action.payload };\n    case PRODUCT_DETAILS_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const productDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_DELETE_REQUEST:\n      return { loading: true };\n    case PRODUCT_DELETE_SUCCESS:\n      return { loading: false, success: true };\n    case PRODUCT_DELETE_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const productCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REQUEST:\n      return { loading: true };\n    case PRODUCT_CREATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload };\n    case PRODUCT_CREATE_FAIL:\n      return { loading: false, error: action.payload };\n    case PRODUCT_CREATE_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n  switch (action.type) {\n    case PRODUCT_UPDATE_REQUEST:\n      return { loading: true };\n    case PRODUCT_UPDATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload };\n    case PRODUCT_UPDATE_FAIL:\n      return { loading: false, error: action.payload };\n    case PRODUCT_UPDATE_RESET:\n      return { product: {} };\n    default:\n      return state;\n  }\n};\n\nexport const productReviewCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REVIEW_REQUEST:\n      return { loading: true };\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\n      return { loading: false, success: true };\n    case PRODUCT_CREATE_REVIEW_FAIL:\n      return { loading: false, error: action.payload };\n    case PRODUCT_CREATE_REVIEW_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_TOP_REQUEST:\n      return { loading: true, products: [] };\n    case PRODUCT_TOP_SUCCESS:\n      return { loading: false, products: action.payload };\n    case PRODUCT_TOP_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n","export const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\";\nexport const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\";\nexport const PRODUCT_LIST_FAIL = \"PRODUCT_LIST_FAIL\";\n\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\";\nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\";\nexport const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\";\n\nexport const PRODUCT_DELETE_REQUEST = \"PRODUCT_DELETE_REQUEST\";\nexport const PRODUCT_DELETE_SUCCESS = \"PRODUCT_DELETE_SUCCESS\";\nexport const PRODUCT_DELETE_FAIL = \"PRODUCT_DELETE_FAIL\";\n\nexport const PRODUCT_CREATE_REQUEST = \"PRODUCT_CREATE_REQUEST\";\nexport const PRODUCT_CREATE_SUCCESS = \"PRODUCT_CREATE_SUCCESS\";\nexport const PRODUCT_CREATE_FAIL = \"PRODUCT_CREATE_FAIL\";\nexport const PRODUCT_CREATE_RESET = \"PRODUCT_CREATE_RESET\";\n\nexport const PRODUCT_UPDATE_REQUEST = \"PRODUCT_UPDATE_REQUEST\";\nexport const PRODUCT_UPDATE_SUCCESS = \"PRODUCT_UPDATE_SUCCESS\";\nexport const PRODUCT_UPDATE_FAIL = \"PRODUCT_UPDATE_FAIL\";\nexport const PRODUCT_UPDATE_RESET = \"PRODUCT_UPDATE_RESET\";\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = \"PRODUCT_CREATE_REVIEW_REQUEST\";\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = \"PRODUCT_CREATE_REVIEW_SUCCESS\";\nexport const PRODUCT_CREATE_REVIEW_FAIL = \"PRODUCT_CREATE_REVIEW_FAIL\";\nexport const PRODUCT_CREATE_REVIEW_RESET = \"PRODUCT_CREATE_REVIEW_RESET\";\n\nexport const PRODUCT_TOP_REQUEST = \"PRODUCT_TOP_REQUEST\";\nexport const PRODUCT_TOP_SUCCESS = \"PRODUCT_TOP_SUCCESS\";\nexport const PRODUCT_TOP_FAIL = \"PRODUCT_TOP_FAIL\";\n","import {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_PAYMENT_METHOD,\n  CART_SAVE_SHIPPING_ADDRESS,\n} from \"../constants/cartConstant\";\n\nexport const cartReducer = (\n  state = { cartItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n\n      const existItem = state.cartItems.find((x) => x.product === item.product);\n\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        };\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        };\n      }\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n      };\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return {\n        ...state,\n        shippingAddress: action.payload,\n      };\n    case CART_SAVE_PAYMENT_METHOD:\n      return {\n        ...state,\n        paymentMethod: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","export const CART_ADD_ITEM = \"CART_ADD_ITEM\";\nexport const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\";\nexport const CART_SAVE_SHIPPING_ADDRESS = \"CART_SAVE_SHIPPING_ADDRESS\";\nexport const CART_SAVE_PAYMENT_METHOD = \"CART_SAVE_PAYMENT_METHOD\";\n","import {\n  USER_DELETE_FAIL,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_RESET,\n  USER_DETAILS_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_REQUEST,\n  USER_LIST_RESET,\n  USER_LIST_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_RESET,\n  USER_UPDATE_SUCCESS,\n} from \"../constants/userConstants\";\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true };\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_LOGOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true };\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return { ...state, loading: true };\n    case USER_DETAILS_SUCCESS:\n      return { loading: false, user: action.payload };\n    case USER_DETAILS_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_DETAILS_RESET:\n      return { user: {} };\n    default:\n      return state;\n  }\n};\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST:\n      return { loading: true };\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return { loading: false, success: true, userInfo: action.payload };\n    case USER_UPDATE_PROFILE_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const userListReducer = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return { loading: true };\n    case USER_LIST_SUCCESS:\n      return { loading: false, users: action.payload };\n    case USER_LIST_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_LIST_RESET:\n      return { users: [] };\n    default:\n      return state;\n  }\n};\n\nexport const userDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return { loading: true };\n    case USER_DELETE_SUCCESS:\n      return { loading: false, success: true };\n    case USER_DELETE_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true };\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, success: true };\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_UPDATE_RESET:\n      return {\n        user: {},\n      };\n    default:\n      return state;\n  }\n};\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\nexport const USER_LOGOUT = \"USER_LOGOUT\";\n\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\n\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\";\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\";\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\";\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\";\n\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST\";\nexport const USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_PROFILE_SUCCESS\";\nexport const USER_UPDATE_PROFILE_FAIL = \"USER_UPDATE_PROFILE_FAIL\";\nexport const USER_UPDATE_PROFILE_RESET = \"USER_UPDATE_RESET\";\n\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\";\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\";\nexport const USER_LIST_FAIL = \"USER_LIST_FAIL\";\nexport const USER_LIST_RESET = \"USER_LIST_RESET\";\n\nexport const USER_DELETE_REQUEST = \"USER_DELETE_REQUEST\";\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\";\nexport const USER_DELETE_FAIL = \"USER_DELETE_FAIL\";\n\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\nexport const USER_UPDATE_RESET = \"USER_UPDATE_RESET\";\n","import {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_RESET,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_RESET,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_RESET,\n} from \"../constants/orderConstants\";\n\nexport const orderCreateReducer = (state = {}, action) => {\n  //switch means evaluate\n  switch (action.type) {\n    case ORDER_CREATE_REQUEST:\n      return {\n        loading: true,\n      };\n    case ORDER_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        order: action.payload,\n      };\n    case ORDER_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const orderDetailsReducer = (\n  state = { loading: true, orderItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case ORDER_DETAILS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case ORDER_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        order: action.payload,\n      };\n    case ORDER_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const orderPayReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_PAY_REQUEST:\n      return {\n        loading: true,\n      };\n    case ORDER_PAY_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      };\n    case ORDER_PAY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    case ORDER_PAY_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const orderDeliverReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_DELIVER_REQUEST:\n      return {\n        loading: true,\n      };\n    case ORDER_DELIVER_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      };\n    case ORDER_DELIVER_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    case ORDER_DELIVER_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_MY_REQUEST:\n      return {\n        loading: true,\n      };\n    case ORDER_LIST_MY_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      };\n    case ORDER_LIST_MY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    case ORDER_LIST_MY_RESET:\n      return { orders: [] };\n    default:\n      return state;\n  }\n};\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_REQUEST:\n      return {\n        loading: true,\n      };\n    case ORDER_LIST_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      };\n    case ORDER_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","export const ORDER_CREATE_REQUEST = \"ORDER_CREATE_REQUEST\";\nexport const ORDER_CREATE_SUCCESS = \"ORDER_CREATE_SUCCESS\";\nexport const ORDER_CREATE_FAIL = \"ORDER_CREATE_FAIL\";\n\nexport const ORDER_DETAILS_REQUEST = \"ORDER_DETAILS_REQUEST\";\nexport const ORDER_DETAILS_SUCCESS = \"ORDER_DETAILS_SUCCESS\";\nexport const ORDER_DETAILS_FAIL = \"ORDER_DETAILS_FAIL\";\n\nexport const ORDER_PAY_REQUEST = \"ORDER_PAY_REQUEST\";\nexport const ORDER_PAY_SUCCESS = \"ORDER_PAY_SUCCESS\";\nexport const ORDER_PAY_FAIL = \"ORDER_PAY_FAIL\";\nexport const ORDER_PAY_RESET = \"ORDER_PAY_RESET\";\n\nexport const ORDER_LIST_MY_REQUEST = \"ORDER_LIST_MY_REQUEST\";\nexport const ORDER_LIST_MY_SUCCESS = \"ORDER_LIST_MY_SUCCESS\";\nexport const ORDER_LIST_MY_FAIL = \"ORDER_LIST_MY_FAIL\";\nexport const ORDER_LIST_MY_RESET = \"ORDER_LIST_MY_RESET\";\n\nexport const ORDER_LIST_REQUEST = \"ORDER_LIST_REQUEST\";\nexport const ORDER_LIST_SUCCESS = \"ORDER_LIST_SUCCESS\";\nexport const ORDER_LIST_FAIL = \"ORDER_LIST_FAIL\";\n\nexport const ORDER_DELIVER_REQUEST = \"ORDER_DELIVER_REQUEST\";\nexport const ORDER_DELIVER_SUCCESS = \"ORDER_DELIVER_SUCCESS\";\nexport const ORDER_DELIVER_FAIL = \"ORDER_DELIVER_FAIL\";\nexport const ORDER_DELIVER_RESET = \"ORDER_DELIVER_RESET\";\n","import React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\n\nconst SearchBox = ({ history }) => {\n  const [keyword, setKeyword] = useState(\"\");\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (keyword.trim()) {\n      history.push(`/search/${keyword}`);\n    } else {\n      history.push(\"/\");\n    }\n  };\n\n  return (\n    <Form onSubmit={submitHandler} inline>\n      <Form.Control\n        type=\"text\"\n        name=\"q\"\n        onChange={(e) => setKeyword(e.target.value)}\n        placeholder=\"Search Products...\"\n        className=\"mr-sm-2 ml-sm-5\"\n      ></Form.Control>\n      <Button type=\"submit\" variant=\"outline-success\" className=\"p-2\">\n        Search\n      </Button>\n    </Form>\n  );\n};\n\nexport default SearchBox;\n","import axios from \"axios\";\nimport {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_DETAILS_RESET,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_REQUEST,\n  USER_LIST_RESET,\n  USER_DELETE_FAIL,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_REQUEST,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n} from \"../constants/userConstants\";\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"Application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users/login\",\n      { email, password },\n      config\n    );\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n  localStorage.removeItem(\"cartItems\");\n  localStorage.removeItem(\"shippingAddress\");\n  localStorage.removeItem(\"paymentMethod\");\n  dispatch({ type: USER_LOGOUT });\n  dispatch({ type: USER_DETAILS_RESET });\n  dispatch({ type: ORDER_LIST_MY_RESET });\n  dispatch({ type: USER_LIST_RESET });\n  document.location.href = \"/login\";\n};\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      \"/api/users\",\n      { name, email, password },\n      config\n    );\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    });\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(`/api/users/profile`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/users`, config);\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    await axios.delete(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DELETE_SUCCESS,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n    });\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Navbar, Nav, Container, NavDropdown } from \"react-bootstrap\";\nimport SearchBox from \"./SearchBox\";\nimport { logout } from \"../actions/userActions\";\n\nconst Header = () => {\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const logoutHandler = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <header>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n        <Container>\n          <LinkContainer to=\"/\">\n            <Navbar.Brand>ProShop</Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Route render={({ history }) => <SearchBox history={history} />} />\n            <Nav className=\"ml-auto\">\n              <LinkContainer to=\"/cart\">\n                <Nav.Link>\n                  <i className=\"fas fa-shopping-cart\"></i>Cart\n                </Nav.Link>\n              </LinkContainer>\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id=\"username\">\n                  <LinkContainer to=\"/profile\">\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to=\"/login\">\n                  <Nav.Link>\n                    <i className=\"fas fa-user\"></i>Sign In\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n              {userInfo && userInfo.isAdmin && (\n                <NavDropdown title=\"Admin\" id=\"adminmenu\">\n                  <LinkContainer to=\"/admin/userlist\">\n                    <NavDropdown.Item>Users</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to=\"/admin/productlist\">\n                    <NavDropdown.Item>Products</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to=\"/admin/orderlist\">\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react'\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nconst Footer = () => {\n    return (\n        <footer>\n            <Container>\n                <Row>\n                    <Col className='text-center py-3'>\n                        Copyright &copy; ProShop\n                    </Col>\n                </Row>\n            </Container>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from \"react\";\nimport PropTypes from 'prop-types'\n\nconst Rating = ({ value, text, color }) => {\n  return (\n    <div className=\"rating\">\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 1\n              ? \"fas fa-star\"\n              : value >= 0.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 2\n              ? \"fas fa-star\"\n              : value >= 1.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 3\n              ? \"fas fa-star\"\n              : value >= 2.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 4\n              ? \"fas fa-star\"\n              : value >= 3.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 5\n              ? \"fas fa-star\"\n              : value >= 4.5\n              ? \"fas fa-star-half-alt\"\n              : \"far fa-star\"\n          }\n        ></i>\n      </span>\n      {/* if text exists, show it */}\n      <span>{text && text}</span>\n    </div>\n  );\n};\n\nRating.defaultProps = {\n  color: \"#f8e825\",\n}\n\nRating.propTypes = {\n    value: PropTypes.number.isRequired,\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string,\n}\n\nexport default Rating;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card } from \"react-bootstrap\";\nimport Rating from \"./Rating\";\n\n//if we destructure product in this product page, it's passed down from Home Screen, where it was initially set in map\nconst Product = ({ product }) => {\n  return (\n    <Card className=\"my-3 p-3 rounded\">\n      <Link to={`/product/${product._id}`}>\n        <Card.Img src={product.image} variant=\"top\" />\n      </Link>\n      <Card.Body>\n        <Link to={`/product/${product._id}`}>\n          <Card.Title as=\"div\">\n            <strong>{product.name}</strong>\n          </Card.Title>\n        </Link>\n        <Card.Text as=\"div\">\n          <Rating\n            value={product.rating}\n            text={`${product.numReviews} reviews`}\n          />\n        </Card.Text>\n        <Card.Text as=\"h3\">${product.price}</Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Product;\n","import React from \"react\";\nimport { Alert } from \"react-bootstrap\";\n\nconst Message = ({ variant, children }) => {\n  return <Alert variant={variant}>{children}</Alert>;\n};\n\nMessage.defaultProps = {\n  variant: \"info\",\n};\n\nexport default Message;\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nconst Loader = () => {\n  return (\n    <Spinner\n      animation=\"border\"\n      role=\"status\"\n      style={{\n        width: \"100px\",\n        height: \"100px\",\n        margin: \"auto\",\n        display: \"block\",\n      }}\n    >\n      <span className=\"sr-only\">Loading</span>\n    </Spinner>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport { Pagination } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst Paginate = ({ pages, page, isAdmin = false, keyword = \"\" }) => {\n  return (\n    pages > 1 && (\n      <Pagination>\n        {[...Array(pages).keys()].map((x) => (\n          <LinkContainer\n            key={x + 1}\n            //x+1 represents the current pagenumber\n            to={\n              !isAdmin\n                ? keyword\n                  ? `/search/${keyword}/page/${x + 1}`\n                  : `/page/${x + 1}`\n                : `/admin/productlist/${x + 1}`\n            }\n          >\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n          </LinkContainer>\n        ))}\n      </Pagination>\n    )\n  );\n};\n\nexport default Paginate;\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nconst Meta = ({ title, description, keywords }) => {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n      <meta name=\"keyword\" content={keywords} />\n    </Helmet>\n  );\n};\n\nMeta.defaultProps = {\n  title: \"Welcome to ProShop\",\n  description: \"We sell the best products, tremendous products\",\n  keywords: \"electronics, big, gold, fancy\",\n};\n\nexport default Meta;\n","import axios from \"axios\";\nimport {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from \"../constants/productConstants\";\n\nexport const listProducts = (keyword = \"\", pageNumber = \"\") => async (\n  dispatch\n) => {\n  try {\n    dispatch({ type: PRODUCT_LIST_REQUEST });\n\n    const { data } = await axios.get(\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\n    );\n\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\n\n    const { data } = await axios.get(`/api/products/${id}`);\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    await axios.delete(`/api/products/${id}`, config);\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const createProduct = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(`/api/products/`, {}, config);\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/products/${product._id}`,\n      product,\n      config\n    );\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const createProductReview = (productId, review) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    await axios.post(`/api/products/${productId}/reviews`, review, config);\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listTopProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_TOP_REQUEST });\n\n    const { data } = await axios.get(`/api/products/top`);\n\n    dispatch({\n      type: PRODUCT_TOP_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_TOP_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Carousel, Image } from \"react-bootstrap\";\nimport Loader from \"./Loader\";\nimport Message from \"./Message\";\nimport { listTopProducts } from \"../actions/productActions\";\n\nconst ProductCarousel = () => {\n  const dispatch = useDispatch();\n\n  const productTopRated = useSelector((state) => state.productTopRated);\n  const { loading, error, products } = productTopRated;\n\n  useEffect(() => {\n    dispatch(listTopProducts());\n  }, [dispatch]);\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant=\"danger\">{error}</Message>\n  ) : (\n    <Carousel pause=\"hover\" className=\"bg-dark\">\n      {products.map((product) => (\n        <Carousel.Item key={product._id}>\n          <Link to={`/product/${product._id}`}>\n            <Image src={product.image} alt={product.name} fluid />\n            <Carousel.Caption className=\"carousel-caption\">\n              <h2>\n                {product.name} (${product.price})\n              </h2>\n            </Carousel.Caption>\n          </Link>\n        </Carousel.Item>\n      ))}\n    </Carousel>\n  );\n};\n\nexport default ProductCarousel;\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Product from \"../components/Product\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport Paginate from \"../components/Paginate\";\nimport Meta from \"../components/Meta\";\nimport ProductCarousel from \"../components/ProductCarousel\";\nimport { listProducts } from \"../actions/productActions\";\n\nconst HomeScreen = ({ match }) => {\n  const keyword = match.params.keyword;\n\n  const pageNumber = match.params.pageNumber || 1;\n\n  const dispatch = useDispatch();\n\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products, page, pages } = productList;\n\n  useEffect(() => {\n    dispatch(listProducts(keyword, pageNumber));\n    //in the dependency array, useEffect fires off when any of these variables change\n  }, [dispatch, keyword, pageNumber]);\n\n  return (\n    <>\n      <Meta />\n      {!keyword ? (\n        <ProductCarousel />\n      ) : (\n        <Link to=\"/\" className=\"btn btn-light\">\n          Go Back\n        </Link>\n      )}{\" \"}\n      <h1>Latest products</h1>\n      {loading ? (\n        <Loader></Loader>\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Row>\n            {products.map((product) => (\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                <Product product={product} />\n              </Col>\n            ))}\n          </Row>\n          <Paginate\n            pages={pages}\n            page={page}\n            keyword={keyword ? keyword : \"\"}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default HomeScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Row,\n  Col,\n  Image,\n  ListGroup,\n  Card,\n  Button,\n  Form,\n} from \"react-bootstrap\";\nimport Rating from \"../components/Rating\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport Meta from \"../components/Meta\";\nimport {\n  listProductDetails,\n  createProductReview,\n} from \"../actions/productActions\";\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\n\nconst ProductScreen = ({ history, match }) => {\n  const [qty, setQty] = useState(1);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, error, product } = productDetails;\n\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\n  const {\n    success: successProductReview,\n    error: errorProductReview,\n  } = productReviewCreate;\n\n  useEffect(() => {\n    if (successProductReview) {\n      alert(\"Review submitted\");\n      setRating(0);\n      setComment(\"\");\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\n    }\n    dispatch(listProductDetails(match.params.id));\n  }, [dispatch, match, successProductReview]);\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      createProductReview(match.params.id, {\n        rating,\n        comment,\n      })\n    );\n  };\n\n  return (\n    <>\n      <Link className=\"btn btn-dark my-3\" to=\"/\">\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Meta title={product.name} />\n\n          <Row>\n            <Col md={6} className=\"product-page-section\">\n              <Image src={product.image} alt={product.name} fluid></Image>\n            </Col>\n            <Col md={3} className=\"product-page-section\">\n              <ListGroup varient=\"flush\">\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Rating\n                    value={product.rating}\n                    text={`${product.numReviews} reviews`}\n                  />\n                </ListGroup.Item>\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n                <ListGroup.Item>\n                  Description: {product.description}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={3} className=\"product-page-section\">\n              <Card>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item>\n                    <Row>\n                      <Col className=\"product-page-section\">Price:</Col>\n                      <Col className=\"product-page-section\">\n                        <strong>${product.price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  <ListGroup.Item>\n                    <Row>\n                      <Col className=\"product-page-section\">Status:</Col>\n                      <Col className=\"product-page-section\">\n                        {product.countInStock > 0 ? \"In Stock\" : \"Out Of Stock\"}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                  {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col className=\"product-page-section\">Qty</Col>\n                        <Col className=\"product-page-section\">\n                          <Form.Control\n                            as=\"select\"\n                            value={qty}\n                            onChange={(e) => setQty(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map(\n                              (x) => (\n                                <option key={x + 1} value={x + 1}>\n                                  {x + 1}\n                                </option>\n                              )\n                            )}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n\n                  <ListGroup.Item>\n                    <Button\n                      className=\"btn-block\"\n                      type=\"button\"\n                      disabled={product.countInStock === 0}\n                      onClick={addToCartHandler}\n                    >\n                      Add To Cart\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <h2>Reviews</h2>\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\n              <ListGroup variant=\"flush\">\n                {product.reviews.map((review) => (\n                  <ListGroup.Item ye={review._id}>\n                    <strong>{review.name}</strong>\n                    <Rating value={review.rating} />\n                    <p>{review.createdAt.substring(0, 10)}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n                <ListGroup.Item>\n                  <h2>Write a Customer Review</h2>\n                  {errorProductReview && (\n                    <Message variant=\"danger\">{errorProductReview}</Message>\n                  )}\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId=\"rating\">\n                        <Form.Label>Rating</Form.Label>\n                        <Form.Control\n                          as=\"select\"\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=\"\">Select...</option>\n                          <option value=\"1\">1 - Poor</option>\n                          <option value=\"2\">2 - Fair</option>\n                          <option value=\"3\">3 - Good</option>\n                          <option value=\"4\">4 - Very Good</option>\n                          <option value=\"5\">5 - Excellent</option>\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group controlId=\"comment\">\n                        <Form.Label>Comment</Form.Label>\n                        <Form.Control\n                          as=\"textarea\"\n                          row=\"3\"\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n                      <Button type=\"submit\" variant=\"primary\">\n                        Submit\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message>\n                      Please <Link to=\"/login\">sign in</Link> to write a review\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ProductScreen;\n","import axios from \"axios\";\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from \"../constants/cartConstant\";\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/products/${id}`);\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty,\n    },\n  });\n\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id,\n  });\n\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data,\n  });\n\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\n};\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data,\n  });\n\n  localStorage.setItem(\"paymentMethod\", JSON.stringify(data));\n};\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Row,\n  Col,\n  ListGroup,\n  Image,\n  Form,\n  Button,\n  Card,\n} from \"react-bootstrap\";\nimport Message from \"..//components/Message\";\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\n\nconst CartScreen = ({ match, location, history }) => {\n  const productId = match.params.id;\n\n  //this is qty?=1 from the url\n  //we split it by the equals sign because we want to get the number out of the url\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\n\n  const dispatch = useDispatch();\n\n  const cart = useSelector((state) => state.cart);\n  const { cartItems } = cart;\n\n  console.log(cartItems);\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id));\n  };\n\n  const checkoutHandler = () => {\n    history.push(\"/login?redirect=shipping\");\n  };\n\n  return (\n    <Row>\n      <Col md={8}>\n        <h1>Shopping Cart</h1>\n        {cartItems.length === 0 ? (\n          <Message>\n            Your cart is empty <Link to=\"\">Go Back</Link>\n          </Message>\n        ) : (\n          <ListGroup variant=\"flush\">\n            {cartItems.map((item) => (\n              <ListGroup.Item key={item.product}>\n                <Row>\n                  <Col md={2}>\n                    <Image src={item.image} alt={item.name} fluid rounded />\n                  </Col>\n                  <Col md={3}>\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                  </Col>\n                  <Col md={2}>{item.price}</Col>\n                  <Col md={2}>\n                    <Form.Control\n                      as=\"select\"\n                      value={item.qty}\n                      onChange={(e) =>\n                        dispatch(\n                          addToCart(item.product, Number(e.target.value))\n                        )\n                      }\n                    >\n                      {[...Array(item.countInStock).keys()].map((x) => (\n                        <option key={x + 1} value={x + 1}>\n                          {x + 1}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Col>\n                  <Col md={2}>\n                    <Button\n                      type=\"button\"\n                      variant=\"light\"\n                      onClick={() => removeFromCartHandler(item.product)}\n                    >\n                      <i className=\"fas fa-trash\"></i>\n                    </Button>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        )}\n      </Col>\n      <Col md={4}>\n        <Card>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\n                items\n              </h2>\n              $\n              {cartItems\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\n                .toFixed(2)}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Button\n                type=\"button\"\n                className=\"btn-block\"\n                disabled={cartItems.length === 0}\n                onClick={checkoutHandler}\n              >\n                Proceed to checkout\n              </Button>\n            </ListGroup.Item>\n          </ListGroup>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default CartScreen;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default FormContainer;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { login } from \"../actions/userActions\";\nimport FormContainer from \"../components/FormContainer\";\n\nconst LoginScreen = ({ location, history }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { loading, error, userInfo } = userLogin;\n\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    //Dispatch Login\n    dispatch(login(email, password));\n  };\n\n  return (\n    <FormContainer>\n      <h1>Sign In</h1>\n      {/* && means 'then' */}\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Button type=\"submit\" variant=\"primary\">\n          Sign In\n        </Button>\n      </Form>\n\n      <Row className=\"py-3\">\n        <Col>\n          New Customer?{\" \"}\n          <Link to={redirect ? `/register?redirect=${redirect}` : \"/register\"}>\n            Register\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n};\n\nexport default LoginScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { register } from \"../actions/userActions\";\nimport FormContainer from \"../components/FormContainer\";\n\nconst RegisterScreen = ({ location, history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const userRegister = useSelector((state) => state.userRegister);\n  const { loading, error, userInfo } = userRegister;\n\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords to not match\");\n    } else {\n      dispatch(register(name, email, password));\n    }\n  };\n\n  return (\n    <FormContainer>\n      <h1>Sign Up</h1>\n      {/* && means 'then' */}\n      {message && <Message variant=\"danger\">{message}</Message>}\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"name\"\n            placeholder=\"Enter name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"confirmPassword\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Confirm password\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Button type=\"submit\" variant=\"primary\">\n          Register\n        </Button>\n      </Form>\n\n      <Row className=\"py-3\">\n        <Col>\n          Have an account?{\" \"}\n          <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\n            Login\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n};\n\nexport default RegisterScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\nimport { listMyOrders } from \"../actions/orderActions\";\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n  const { success } = userUpdateProfile;\n\n  const orderListMy = useSelector((state) => state.orderListMy);\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      if (!user.name) {\n        dispatch(getUserDetails(\"profile\"));\n        dispatch(listMyOrders());\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, userInfo, user]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords to not match\");\n    } else {\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\n    }\n  };\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {/* && means 'then' */}\n        {message && <Message variant=\"danger\">{message}</Message>}\n        {error && <Message variant=\"danger\">{error}</Message>}\n        {success && <Message variant=\"success\">Profile Updated</Message>}\n        {loading && <Loader />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"name\"\n              placeholder=\"Enter name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"confirmPassword\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Confirm password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Button type=\"submit\" variant=\"primary\">\n            Update\n          </Button>\n        </Form>\n      </Col>\n      <Col md={9}>\n        <h2>My Orders</h2>\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant=\"danger\">{errorOrders}</Message>\n        ) : (\n          <Table striped border hover responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }} />\n                    )}\n                  </td>\n                  <td>\n                    {\" \"}\n                    {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }} />\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button className=\"btn-sm\" variant=\"light\">\n                        Details\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  );\n};\n\nexport default ProfileScreen;\n","import axios from \"axios\";\nimport {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_REQUEST,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_FAIL,\n} from \"../constants/orderConstants\";\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(`/api/orders`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const payOrder = (orderId, paymentResult) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/orders/${orderId}/pay`,\n      paymentResult,\n      config\n    );\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/orders/${order._id}/deliver`,\n      {},\n      config\n    );\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders/myorders`, config);\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(`/api/orders`, config);\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","import React from \"react\";\nimport { Nav } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\n  return (\n    <Nav className=\"justify-content-center mb-4\">\n      <Nav.Item>\n        {step1 ? (\n          <LinkContainer to=\"/login\">\n            <Nav.Link>Sign In</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Sign In</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step2 ? (\n          <LinkContainer to=\"/Shipping\">\n            <Nav.Link>Shipping</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Shipping</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step3 ? (\n          <LinkContainer to=\"/payment\">\n            <Nav.Link>Payment</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Payment</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step4 ? (\n          <LinkContainer to=\"/placeorder\">\n            <Nav.Link>Place Order</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Place Order</Nav.Link>\n        )}\n      </Nav.Item>\n    </Nav>\n  );\n};\n\nexport default CheckoutSteps;\n","import React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FormContainer from \"../components/FormContainer\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { saveShippingAddress } from \"../actions/cartActions\";\n\nconst ShippingScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n\n  const dispatch = useDispatch();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\n    history.push(\"/payment\");\n  };\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 />\n      <h1>Shipping</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"address\">\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type=\"address\"\n            placeholder=\"Enter address\"\n            value={address}\n            required\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"city\">\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter city\"\n            value={city}\n            required\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n          <Form.Group controlId=\"postalCode\">\n            <Form.Label>Postal Code</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter Postal Code\"\n              value={postalCode}\n              required\n              onChange={(e) => setPostalCode(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"country\">\n            <Form.Label>Country</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter country\"\n              value={country}\n              required\n              onChange={(e) => setCountry(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n        </Form.Group>\n        <Button type=\"submit\" variant=\"primary\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default ShippingScreen;\n","import React, { useState } from \"react\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FormContainer from \"../components/FormContainer\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { savePaymentMethod } from \"../actions/cartActions\";\n\nconst PaymentScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n\n  if (!shippingAddress) {\n    history.push(\"/shipping\");\n  }\n\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\n  //   const [stripe, setStripe] = useState(\"Stripe\");\n\n  const dispatch = useDispatch();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod));\n    history.push(\"/placeorder\");\n  };\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n      <h1>Payment Method</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as=\"legend\">Select Method</Form.Label>\n          <Col>\n            <Form.Check\n              type=\"radio\"\n              label=\"PayPal or Credit Card\"\n              id=\"PayPal\"\n              name=\"paymentMethod\"\n              value=\"PayPal\"\n              checked\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n            {/* <Form.Check\n              type=\"radio\"\n              label=\"Stripe\"\n              id=\"Stripe\"\n              name=\"paymentMethod\"\n              value=\"Stripe\"\n              checked\n              onChange={(e) => setStripe(e.target.value)}\n            ></Form.Check> */}\n          </Col>\n        </Form.Group>\n        <Button type=\"submit\" variant=\"primary\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default PaymentScreen;\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { createOrder } from \"../actions/orderActions\";\n\nconst PlaceOrderScreen = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const cart = useSelector((state) => state.cart);\n\n  //Calculate prices\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2);\n  };\n\n  cart.itemsPrice = addDecimals(\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  );\n\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 10);\n\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\n\n  cart.totalPrice = (\n    Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice)\n  ).toFixed(2);\n\n  const orderCreate = useSelector((state) => state.orderCreate);\n  const { order, success, error } = orderCreate;\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`);\n    }\n  }, [history, success, order]);\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    );\n  };\n\n  return (\n    <>\n      <CheckoutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Address:</strong>\n                {cart.shippingAddress.address}, {cart.shippingAddress.city},{\" \"}\n                {cart.shippingAddress.postalCode},{\" \"}\n                {cart.shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <strong>Method: </strong>\n              {cart.paymentMethod}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message>Your cart is empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                {error && <Message variant=\"danger\">{error}</Message>}\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button\n                  type=\"button\"\n                  className=\"btn-block\"\n                  disabled={cart.cartItems === 0}\n                  onClick={placeOrderHandler}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default PlaceOrderScreen;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, ListGroup, Image, Card, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport {\n  getOrderDetails,\n  payOrder,\n  deliverOrder,\n} from \"../actions/orderActions\";\nimport {\n  ORDER_PAY_RESET,\n  ORDER_DELIVER_RESET,\n} from \"../constants/orderConstants\";\n\nconst OrderScreen = ({ match, history }) => {\n  const orderId = match.params.id;\n\n  const [sdkReady, setSdkReady] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, loading, error } = orderDetails;\n\n  const orderDeliver = useSelector((state) => state.orderDeliver);\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\n  //when you use the colons like that in the destructuring above, you're renaming the variable\n\n  const orderPay = useSelector((state) => state.orderPay);\n  const { loading: loadingPay, success: successPay } = orderPay;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  if (!loading) {\n    const addDecimals = (num) => {\n      return (Math.round(num * 100) / 100).toFixed(2);\n    };\n\n    order.itemsPrice = addDecimals(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    );\n  }\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    }\n    const addPayPalScript = async () => {\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\n      const script = document.createElement(\"script\");\n      script.type = \"text/javascript\";\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n      script.async = true;\n      script.onload = () => {\n        setSdkReady(true);\n      };\n      document.body.appendChild(script);\n    };\n\n    //if the order isn't there, or if we have a success pay, dispatch\n    if (!order || successPay || successDeliver) {\n      dispatch({ type: ORDER_PAY_RESET });\n      dispatch({ type: ORDER_DELIVER_RESET });\n      dispatch(getOrderDetails(orderId));\n      //check to see if order\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript();\n      } else {\n        setSdkReady(true);\n      }\n    }\n  }, [dispatch, orderId, successPay, order, successDeliver, history, userInfo]);\n\n  const successPaymentHandler = (paymentResult) => {\n    console.log(paymentResult);\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order));\n  };\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant=\"danger\">{error}</Message>\n  ) : (\n    <>\n      <h1>Order {order._id}</h1>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Name: </strong>\n                {order.user.name}\n              </p>\n              <p>\n                <strong>Email: </strong>\n                <a href={`mailto:${order.user.email}`}> {order.user.email}</a>\n              </p>\n              <p>\n                <strong>Address:</strong>\n                {order.shippingAddress.address}, {order.shippingAddress.city},{\" \"}\n                {order.shippingAddress.postalCode},{\" \"}\n                {order.shippingAddress.country}\n              </p>\n              {order.isDelivered ? (\n                <Message variant=\"success\">\n                  Delivered on {order.deliveredAt}\n                </Message>\n              ) : (\n                <Message variant=\"danger\">Not Delivered</Message>\n              )}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n\n              <p>\n                <strong>Method: </strong>\n                {order.paymentMethod}\n              </p>\n              {order.isPaid ? (\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\n              ) : (\n                <Message variant=\"danger\">Not Paid</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {order.orderItems.length === 0 ? (\n                <Message>Order is empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${order.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay && <Loader />}\n                  {!sdkReady ? (\n                    <Loader />\n                  ) : (\n                    <PayPalButton\n                      amount={order.totalPrice}\n                      onSuccess={successPaymentHandler}\n                    />\n                  )}\n                </ListGroup.Item>\n              )}\n              {loadingDeliver && <Loader />}\n              {userInfo &&\n                userInfo.isAdmin &&\n                order.isPaid &&\n                !order.isDelivered && (\n                  <ListGroup.Item>\n                    <Button\n                      type=\"button\"\n                      className=\"btn btn-block\"\n                      onClick={deliverHandler}\n                    >\n                      Mark As Delivered\n                    </Button>\n                  </ListGroup.Item>\n                )}\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default OrderScreen;\n","import React, { useEffect } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { listOrders } from \"../actions/orderActions\";\n\nconst OrderListScreen = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const orderList = useSelector((state) => state.orderList);\n  const { loading, error, orders } = orderList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders());\n    } else {\n      history.push(\"/login\");\n    }\n  }, [dispatch, history, userInfo]);\n\n  return (\n    <>\n      <h1>Orders</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Table striped border hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>USER</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user && order.user.name}</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>${order.totalPrice}</td>\n                <td>\n                  {order.isPaid ? (\n                    order.paidAt.substring(0, 10)\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n                <td>\n                  {order.isDelivered ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button variant=\"light\" className=\"btn-sm\">\n                      Details\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  );\n};\n\nexport default OrderListScreen;\n","import React, { useEffect } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Table, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { listUsers, deleteUser } from \"../actions/userActions\";\n\nconst UserListScreen = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const userList = useSelector((state) => state.userList);\n  const { loading, error, users } = userList;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userDelete = useSelector((state) => state.userDelete);\n  const { success: successDelete } = userDelete;\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers());\n    } else {\n      history.push(\"/login\");\n    }\n  }, [dispatch, history, successDelete, userInfo]);\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteUser(id));\n    }\n  };\n\n  return (\n    <>\n      <h1>Users</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Table striped border hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NAME</th>\n              <th>EMAIL</th>\n              <th>ADMIN</th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user) => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\n                </td>\n                <td>\n                  {user.isAdmin ? (\n                    <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\n                  ) : (\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    <Button variant=\"light\" className=\"btn-sm\">\n                      <i className=\"fas fa-edit\"></i>\n                    </Button>\n                  </LinkContainer>\n                  <Button\n                    variant=\"danger\"\n                    className=\"btn-sm\"\n                    onClick={() => deleteHandler(user._id)}\n                  >\n                    <i className=\"fas fa-trash\"></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  );\n};\n\nexport default UserListScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\n\nconst UserEditScreen = ({ match, history }) => {\n  const userId = match.params.id;\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n\n  const userUpdate = useSelector((state) => state.userUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = userUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET });\n      history.push(\"/admin/userlist\");\n    } else {\n      if (!user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [dispatch, history, userId, user, successUpdate]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }));\n  };\n\n  return (\n    <>\n      <Link to=\"/admin/userlist\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit User</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"name\"\n                placeholder=\"Enter name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"isadmin\">\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Is Admin\"\n                value={isAdmin}\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n            <Button type=\"submit\" variant=\"primary\">\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  );\n};\n\nexport default UserEditScreen;\n","import React, { useEffect } from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport Paginate from \"../components/Paginate\";\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct,\n} from \"../actions/productActions\";\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\n\nconst ProductListScreen = ({ history, match }) => {\n  const pageNumber = match.params.pageNumber || 1;\n\n  const dispatch = useDispatch();\n\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products, page, pages } = productList;\n\n  const productDelete = useSelector((state) => state.productDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = productDelete;\n\n  const productCreate = useSelector((state) => state.productCreate);\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    product: createdProduct,\n  } = productCreate;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET });\n\n    if (!userInfo.isAdmin) {\n      history.push(\"/login\");\n    }\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`);\n    } else {\n      //the empty string represents the keyword variable\n      dispatch(listProducts(\"\", pageNumber));\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdProduct,\n    pageNumber,\n  ]);\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteProduct(id));\n    }\n  };\n\n  const createProductHandler = () => {\n    dispatch(createProduct());\n  };\n\n  return (\n    <>\n      <Row className=\"align-items-center\">\n        <Col>\n          <h1>Products</h1>\n        </Col>\n        <Col className=\"text-right\">\n          <Button className=\"my-3\" onClick={createProductHandler}>\n            <i className=\"fas fa-plus\"></i>Create Product\n          </Button>\n        </Col>\n      </Row>\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Table striped border hover responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>PRICE</th>\n                <th>CATEGORY</th>\n                <th>BRAND</th>\n              </tr>\n            </thead>\n            <tbody>\n              {products.map((product) => (\n                <tr key={product._id}>\n                  <td>{product._id}</td>\n                  <td>{product.name}</td>\n                  <td>${product.price}</td>\n                  <td>{product.category}</td>\n                  <td>{product.brand}</td>\n                  <td>\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                      <Button variant=\"light\" className=\"btn-sm\">\n                        <i className=\"fas fa-edit\"></i>\n                      </Button>\n                    </LinkContainer>\n                    <Button\n                      variant=\"danger\"\n                      className=\"btn-sm\"\n                      onClick={() => deleteHandler(product._id)}\n                    >\n                      <i className=\"fas fa-trash\"></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <Paginate pages={pages} page={page} isAdmin={true} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ProductListScreen;\n","import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\nimport { listProductDetails, updateProduct } from \"../actions/productActions\";\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\n\nconst ProductEditScreen = ({ match, history }) => {\n  const productId = match.params.id;\n\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, error, product } = productDetails;\n\n  const productUpdate = useSelector((state) => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = productUpdate;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET });\n      history.push(\"/admin/productlist\");\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n      }\n    }\n  }, [dispatch, history, productId, product, successUpdate]);\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      };\n\n      const { data } = await axios.post(\"/api/upload\", formData, config);\n\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      console.log(error);\n      setUploading(false);\n    }\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        price,\n        image,\n        brand,\n        category,\n        description,\n        countInStock,\n      })\n    );\n  };\n\n  return (\n    <>\n      <Link to=\"/admin/productlist\" className=\"btn btn-light my-3\">\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit Product</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"name\"\n                placeholder=\"Enter name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"price\">\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter price\"\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"image\">\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter image url\"\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.File\n              id=\"image-file\"\n              label=\"Choose File\"\n              custom\n              onChange={uploadFileHandler}\n            ></Form.File>\n            {uploading && <Loader />}\n            <Form.Group controlId=\"brand\">\n              <Form.Label>Brand</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter brand\"\n                value={brand}\n                onChange={(e) => setBrand(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"countInStock\">\n              <Form.Label>Count In Stock</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Enter Count In Stock\"\n                value={countInStock}\n                onChange={(e) => setCountInStock(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"category\">\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Category\"\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"description\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter description\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\">\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  );\n};\n\nexport default ProductEditScreen;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport CartScreen from \"./screens/CartScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport ShippingScreen from \"./screens/ShippingScreen\";\nimport PaymentScreen from \"./screens/PaymentScreen\";\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\nimport OrderScreen from \"./screens/OrderScreen\";\nimport OrderListScreen from \"./screens/OrderListScreen\";\nimport UserListScreen from \"./screens/UserListScreen\";\nimport UserEditScreen from \"./screens/UserEditScreen\";\nimport ProductListScreen from \"./screens/ProductListScreen\";\nimport ProductEditScreen from \"./screens/ProductEditScreen\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path=\"/order/:id\" component={OrderScreen} />\n          <Route path=\"/shipping\" component={ShippingScreen} />\n          <Route path=\"/payment\" component={PaymentScreen} />\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n          <Route path=\"/login\" component={LoginScreen} />\n          <Route path=\"/register\" component={RegisterScreen} />\n          <Route path=\"/profile\" component={ProfileScreen} />\n          <Route path=\"/product/:id\" component={ProductScreen} />\n          <Route path=\"/cart/:id?\" component={CartScreen} />\n          <Route path=\"/admin/userlist\" component={UserListScreen} />\n          <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\n          <Route\n            path=\"/admin/productlist\"\n            component={ProductListScreen}\n            exact\n          />\n          <Route\n            path=\"/admin/productlist/:pageNumber\"\n            component={ProductListScreen}\n            exact\n          />\n          <Route path=\"/admin/orderlist\" component={OrderListScreen} />\n          <Route path=\"/admin/product/:id/edit\" component={ProductEditScreen} />\n          <Route path=\"/search/:keyword\" component={HomeScreen} exact />\n          <Route path=\"/page/:pageNumber\" component={HomeScreen} exact />\n          <Route\n            path=\"/search/:keyword/page/:pageNumber\"\n            component={HomeScreen}\n            exact\n          />\n          <Route path=\"/\" component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}